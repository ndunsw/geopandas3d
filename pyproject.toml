
[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "geopandas3d"
version = "0.3.2-dev"
description = "3D extensions to GeoPandas for altitude-aware spatial operations"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Nicolas Dunsworth", email = "nduns820@gmail.com.com"}
]
keywords = ["geopandas", "3d", "spatial", "gis", "geospatial", "pandas", "numpy", "altitude", "height"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "geopandas>=0.14.0",
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "shapely>=2.0",
    "matplotlib>=3.5",
    "pyproj>=3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0", 
    "pytest-cov>=4.0",
    "ruff>=0.5",
    "black>=23.0",
    "hnswlib>=0.7"
]
crs = ["pyproj>=3.6"]
docs = ["sphinx>=6.0", "sphinx-rtd-theme>=1.0"]
plotting = ["matplotlib>=3.5"]
full = ["pyproj>=3.6", "matplotlib>=3.5", "hnswlib>=0.7.0"]

[project.urls]
Homepage = "https://github.com/yourname/geopandas3d"
Documentation = "https://geopandas3d.readthedocs.io/"
Repository = "https://github.com/yourname/geopandas3d"
Issues = "https://github.com/yourname/geopandas3d/issues"
Changelog = "https://github.com/yourname/geopandas3d/blob/main/CHANGELOG.md"

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --strict-markers --strict-config"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
